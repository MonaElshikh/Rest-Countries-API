{"version":3,"sources":["src/ts/index.ts"],"names":["countriesApi","countriesDiv","document","querySelector","let","countriesList","regionsList","listDiv","detailesDiv","backBtn","addToLocalStorage","list","key","localStorage","setItem","JSON","stringify","getFromLocalStorage","getItem","parse","getCountries","undefined","yield","fetch","json","filter","item","name","common","loadCountries","loadRegions","innerHTML","forEach","countryDiv","createElement","flagDiv","className","flagImg","dataDiv","src","country","flags","svg","appendChild","h2","populationDiv","populationlbl","populationSpan","regionDiv","population","toString","regionlbl","regionSpan","region","capital","capitalDiv","capitalLbl","capitalSpan","join","addEventListener","loadCountryDetails","regions","Set","map","r","sort","option","value","style","display","backToList"],"mappings":"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","file":"main.js","sourcesContent":["//#region  Declaration\r\nconst countriesApi = \"https://restcountries.com/v3.1/all\";\r\nconst countriesDiv = document.querySelector(\".countries\") as HTMLDivElement;\r\ninterface Countries {\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName: {\r\n      isl: {\r\n        official: string;\r\n        common: string;\r\n      };\r\n    };\r\n  };\r\n  area: number;\r\n  flags: { png: string; svg: string };\r\n  population: number;\r\n  region: string;\r\n  subregion: string;\r\n  capital: string[];\r\n  tld: string[];\r\n  currencies: {};\r\n  languages: {};\r\n  borders: string[];\r\n}\r\nlet countriesList: Countries[];\r\nlet regionsList = document.querySelector(\r\n  \"#regions-list\"\r\n) as HTMLDataListElement;\r\nlet listDiv = document.querySelector(\".list\") as HTMLDivElement;\r\nlet detailesDiv = document.querySelector(\".details\") as HTMLDivElement;\r\nlet backBtn = document.querySelector(\".back-btn>button\");\r\n//#endregion\r\n//#region  Functions\r\nfunction addToLocalStorage(list: any, key: string) {\r\n  localStorage.setItem(key, JSON.stringify(list));\r\n}\r\nfunction getFromLocalStorage(key: string) {\r\n  return localStorage.getItem(key)\r\n    ? JSON.parse(localStorage.getItem(key) || \"\")\r\n    : null;\r\n}\r\nasync function getCountries() {\r\n  if (\r\n    getFromLocalStorage(\"countries-list\") == undefined ||\r\n    getFromLocalStorage(\"countries-list\") == null\r\n  ) {\r\n    let data = (await fetch(countriesApi)).json();\r\n    let list = await data;\r\n    list = list.filter((item: Countries) => item.name.common !== \"Israel\");\r\n    addToLocalStorage(list, \"countries-list\");\r\n  }\r\n  countriesList = getFromLocalStorage(\"countries-list\");\r\n  loadCountries();\r\n  loadRegions();\r\n}\r\nfunction loadCountries() {\r\n  countriesDiv.innerHTML = \"\";\r\n  countriesList.forEach((country: Countries) => {\r\n    let countryDiv = document.createElement(\"div\");\r\n    countryDiv.className = \"country\";\r\n\r\n    let flagDiv = document.createElement(\"div\");\r\n    flagDiv.className = \"flag\";\r\n    let flagImg = document.createElement(\"img\");\r\n    flagImg.src = country.flags.svg;\r\n    flagDiv.appendChild(flagImg);\r\n    countryDiv.appendChild(flagDiv);\r\n\r\n    let dataDiv = document.createElement(\"div\");\r\n    dataDiv.className = \"data\";\r\n\r\n    let h2 = document.createElement(\"h2\");\r\n    h2.innerHTML = country.name.common;\r\n    dataDiv.appendChild(h2);\r\n\r\n    let populationDiv = document.createElement(\"div\");\r\n    populationDiv.className = \"population\";\r\n    let populationlbl = document.createElement(\"label\");\r\n    populationlbl.innerHTML = \"Population: \";\r\n    let populationSpan = document.createElement(\"span\");\r\n    populationSpan.innerHTML = country.population.toString();\r\n    populationDiv.appendChild(populationlbl);\r\n    populationDiv.appendChild(populationSpan);\r\n    dataDiv.appendChild(populationDiv);\r\n\r\n    let regionDiv = document.createElement(\"div\");\r\n    regionDiv.className = \"region\";\r\n    let regionlbl = document.createElement(\"label\");\r\n    regionlbl.innerHTML = \"Region: \";\r\n    let regionSpan = document.createElement(\"span\");\r\n    regionSpan.innerHTML = country.region;\r\n    regionDiv.appendChild(regionlbl);\r\n    regionDiv.appendChild(regionSpan);\r\n    dataDiv.appendChild(regionDiv);\r\n\r\n    if (country.capital !== undefined) {\r\n      let capitalDiv = document.createElement(\"div\");\r\n      capitalDiv.className = \"capital\";\r\n      let capitalLbl = document.createElement(\"label\");\r\n      capitalLbl.innerHTML = \"Capital: \";\r\n      let capitalSpan = document.createElement(\"span\");\r\n      capitalSpan.innerHTML = country.capital.join(\", \");\r\n      capitalDiv.appendChild(capitalLbl);\r\n      capitalDiv.appendChild(capitalSpan);\r\n      dataDiv.appendChild(capitalDiv);\r\n    }\r\n    countryDiv.appendChild(dataDiv);\r\n    countryDiv.addEventListener(\"click\", () => {\r\n      loadCountryDetails();\r\n    });\r\n    countriesDiv.appendChild(countryDiv);\r\n  });\r\n}\r\nfunction loadRegions() {\r\n  let regions = [...new Set(countriesList.map((r) => r.region).sort())];\r\n  regionsList.innerHTML = \"\";\r\n  regions.forEach((region) => {\r\n    let option = document.createElement(\"option\");\r\n    option.value = region;\r\n    option.innerHTML = region;\r\n    regionsList.appendChild(option);\r\n  });\r\n}\r\nfunction loadCountryDetails() {\r\n  listDiv.style.display = \"none\";\r\n  detailesDiv.style.display = \"block\";\r\n}\r\nfunction backToList() {\r\n  backBtn?.addEventListener(\"click\", () => {\r\n    listDiv.style.display = \"block\";\r\n    detailesDiv.style.display = \"none\";\r\n  });\r\n}\r\n//#endregion\r\n//#region  Calls\r\ngetCountries();\r\nbackToList();\r\n//#endregion\r\n"]}