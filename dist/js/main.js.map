{"version":3,"sources":["src/ts/index.ts"],"names":["countriesApi","countriesDiv","document","querySelector","rootElement","documentElement","let","themeDiv","regionsOptions","regionInput","arrowImg","regionDdl","searchInput","countriesList","regionsList","listDiv","detailesDiv","backBtn","THEMES","dark","--bg-color","--txt-color","--elements-bgcolor","--filter","light","detailesFlag","detailsCountryName","nativeName","population","region","subRegion","capital","topLevelDomain","currencies","languages","borderCountryDiv","borderCountryValuesDiv","addToLocalStorage","key","value","localStorage","setItem","JSON","stringify","getFromLocalStorage","getItem","parse","loadPreferedTheme","setAttribute","setPreferedTheme","dataset","theme","themeName","style","setProperty","toggleTheme","addEventListener","backToList","display","getCountries","undefined","list","yield","fetch","json","filter","item","name","common","loadCountries","loadRegions","querySelectorAll","innerHTML","forEach","countryDiv","createElement","flagDiv","className","flagImg","dataDiv","src","country","flags","svg","appendChild","h2","populationDiv","populationlbl","populationSpan","regionDiv","toString","regionlbl","regionSpan","capitalDiv","capitalLbl","capitalSpan","join","loadCountryDetails","console","log","innerText","official","subregion","tld","Object","keys","langs","push","borders","borderCountrySpan","border","c","cca3","searchByCountry","trim","includes","openRegionList","regions","Set","map","r","sort","unshift","option","filterByRegion","regionName"],"mappings":"8UACA,MAAMA,aAAe,qCACfC,aAAeC,SAASC,cAAc,YAAY,EAClDC,YAAcF,SAASG,gBAC7BC,IAAIC,SAAWL,SAASC,cAAc,QAAQ,EAC1CK,eACAC,YAAcP,SAASC,cACzB,oBAAoB,EAElBO,SAAWR,SAASC,cAAc,iBAAiB,EACnDQ,UAAYT,SAASC,cAAc,eAAe,EAClDS,YAAcV,SAASC,cACzB,mBAAmB,EA6BjBU,cACAC,YAAcZ,SAASC,cACzB,eAAe,EAEbY,QAAUb,SAASC,cAAc,OAAO,EACxCa,YAAcd,SAASC,cAAc,UAAU,EAC/Cc,QAAUf,SAASC,cAAc,kBAAkB,EACvD,MAAMe,OAAc,CAClBC,KAAM,CACJC,aAAc,qBACdC,cAAe,kBACfC,qBAAsB,qBACtBC,WAAY,2B,EAEdC,MAAO,CACLJ,aAAc,kBACdC,cAAe,oBACfC,qBAAsB,mBACtBC,WAAY,M,GAIhBjB,IAAImB,aAAevB,SAASC,cAC1B,uBAAuB,EAErBuB,mBAAqBxB,SAASC,cAChC,uBAAuB,EAErBwB,WAAazB,SAASC,cACxB,iCAAiC,EAE/ByB,WAAa1B,SAASC,cACxB,gCAAgC,EAE9B0B,OAAS3B,SAASC,cACpB,4BAA4B,EAE1B2B,UAAY5B,SAASC,cACvB,6BAA6B,EAE3B4B,QAAU7B,SAASC,cACrB,0BAA0B,EAExB6B,eAAiB9B,SAASC,cAC5B,wBAAwB,EAEtB8B,WAAa/B,SAASC,cACxB,6BAA6B,EAE3B+B,UAAYhC,SAASC,cACvB,4BAA4B,EAE1BgC,iBAAmBjC,SAASC,cAC9B,iBAAiB,EAEfiC,uBAAyBlC,SAASC,cACpC,yBAAyB,EAM3B,SAASkC,kBAAkBC,EAAaC,GACtCC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,CAAK,CAAC,CACjD,CACA,SAASK,oBAAoBN,GAC3B,OAAOE,aAAaK,QAAQP,CAAG,EAC3BI,KAAKI,MAAMN,aAAaK,QAAQP,CAAG,GAAK,EAAE,EAC1C,IACN,CACA,SAASS,oBACHH,oBAAoB,OAAO,EAC7BrC,SAASyC,aAAa,aAAcJ,oBAAoB,OAAO,CAAC,EAEhErC,SAASyC,aAAa,aAAc,OAAO,EAE7CC,iBAAiB1C,SAAS2C,QAAQC,KAAK,CACzC,CACA,SAASF,iBAAiBG,GACxBhD,YAAYiD,MAAMC,YAAY,aAAcpC,OAAOkC,GAAW,aAAa,EAC3EhD,YAAYiD,MAAMC,YAChB,qBACApC,OAAOkC,GAAW,qBAAqB,EAEzChD,YAAYiD,MAAMC,YAChB,cACApC,OAAOkC,GAAW,cAAc,EAElChD,YAAYiD,MAAMC,YAAY,WAAYpC,OAAOkC,GAAW,WAAW,CACzE,CACA,SAASG,cACPhD,SAASiD,iBAAiB,QAAS,KACN,UAA3BjD,SAAS2C,QAAQC,MACb5C,SAASyC,aAAa,aAAc,MAAM,EAC1CzC,SAASyC,aAAa,aAAc,OAAO,EAC/CX,kBAAkB,QAAS9B,SAAS2C,QAAQC,KAAK,EACjDF,iBAAiB1C,SAAS2C,QAAQC,KAAK,CACzC,CAAC,CACH,CACA,SAASM,aACA,OAAPxC,SAAO,KAAA,IAAPA,SAAAA,QAASuC,iBAAiB,QAAS,KACjCzC,QAAQsC,MAAMK,QAAU,QACxB1C,YAAYqC,MAAMK,QAAU,MAC9B,CAAC,CACH,CAGA,SAAeC,e,gDACb,GAC2CC,MAAzChB,oBAAoB,gBAAgB,GACK,MAAzCA,oBAAoB,gBAAgB,EACpC,CAEAtC,IAAIuD,EAAOC,MADA,MAAOC,MAAM/D,YAAY,GAAGgE,KAAI,EAI3C3B,kBAAkB,iBAFlBwB,EAAOA,EAAKI,OAAO,GAA0C,WAArBC,EAAKC,KAAKC,MAAmB,CAE7B,C,CAE1CvD,cAAgB+B,oBAAoB,gBAAgB,EACpDyB,cAAa,EACbC,YAAW,EACX9D,eAAiBN,SAASqE,iBAAiB,wBAAwB,CACrE,CAAC,C,CACD,SAASF,gBACPpE,aAAauE,UAAY,GACzB3D,cAAc4D,QAAQ,IACpBnE,IAAIoE,EAAaxE,SAASyE,cAAc,KAAK,EAGzCC,GAFJF,EAAWG,UAAY,UAET3E,SAASyE,cAAc,KAAK,GAEtCG,GADJF,EAAQC,UAAY,OACN3E,SAASyE,cAAc,KAAK,GAKtCI,GAJJD,EAAQE,IAAMC,EAAQC,MAAMC,IAC5BP,EAAQQ,YAAYN,CAAO,EAC3BJ,EAAWU,YAAYR,CAAO,EAEhB1E,SAASyE,cAAc,KAAK,GAGtCU,GAFJN,EAAQF,UAAY,OAEX3E,SAASyE,cAAc,IAAI,GAIhCW,GAHJD,EAAGb,UAAYS,EAAQd,KAAKC,OAC5BW,EAAQK,YAAYC,CAAE,EAEFnF,SAASyE,cAAc,KAAK,GAE5CY,GADJD,EAAcT,UAAY,aACN3E,SAASyE,cAAc,OAAO,GAE9Ca,GADJD,EAAcf,UAAY,eACLtE,SAASyE,cAAc,MAAM,GAM9Cc,GALJD,EAAehB,UAAYS,EAAQrD,WAAW8D,SAAQ,EACtDJ,EAAcF,YAAYG,CAAa,EACvCD,EAAcF,YAAYI,CAAc,EACxCT,EAAQK,YAAYE,CAAa,EAEjBpF,SAASyE,cAAc,KAAK,GAExCgB,GADJF,EAAUZ,UAAY,SACN3E,SAASyE,cAAc,OAAO,GAE1CiB,GADJD,EAAUnB,UAAY,WACLtE,SAASyE,cAAc,MAAM,GAC9CiB,EAAWpB,UAAYS,EAAQpD,OAC/B4D,EAAUL,YAAYO,CAAS,EAC/BF,EAAUL,YAAYQ,CAAU,EAChCb,EAAQK,YAAYK,CAAS,EAEL7B,KAAAA,IAApBqB,EAAQlD,WACN8D,EAAa3F,SAASyE,cAAc,KAAK,GAClCE,UAAY,WACnBiB,EAAa5F,SAASyE,cAAc,OAAO,GACpCH,UAAY,aACnBuB,EAAc7F,SAASyE,cAAc,MAAM,GACnCH,UAAYS,EAAQlD,QAAQiE,KAAK,IAAI,EACjDH,EAAWT,YAAYU,CAAU,EACjCD,EAAWT,YAAYW,CAAW,EAClChB,EAAQK,YAAYS,CAAU,GAEhCnB,EAAWU,YAAYL,CAAO,EAC9BL,EAAWlB,iBAAiB,QAAS,KACnCyC,mBAAmBhB,CAAO,CAC5B,CAAC,EACDhF,aAAamF,YAAYV,CAAU,CACrC,CAAC,CACH,CACA,SAASuB,mBAAmBhB,GAC1BlE,QAAQsC,MAAMK,QAAU,OACxB1C,YAAYqC,MAAMK,QAAU,QAC5BtB,uBAAuBoC,UAAY,GACnC0B,QAAQC,IAAIlB,CAAO,EACnBxD,aAAauD,IAAMC,EAAQC,MAAMC,IACjCzD,mBAAmB0E,UAAYnB,EAAQd,KAAKC,OAC5CzC,WAAWyE,UAAYnB,EAAQd,KAAKkC,SACpCzE,WAAWwE,UAAYnB,EAAQrD,WAAW8D,SAAQ,EAClD7D,OAAOuE,UAAYnB,EAAQpD,OAC3BC,UAAUsE,UAAYnB,EAAQqB,UAC9BvE,QAAQqE,UACcxC,KAAAA,IAApBqB,EAAQlD,QAAwBkD,EAAQlD,QAAQiE,KAAK,GAAG,EAAI,MAC9DhE,eAAeoE,UAAYnB,EAAQsB,IAAIP,KAAK,IAAI,EAChD/D,WAAWmE,UACcxC,KAAAA,IAAvBqB,EAAQhD,WACJgD,EAAQhD,WAAWuE,OAAOC,KAAKxB,EAAQhD,UAAU,EAAE,IAAIkC,KACvD,MACN7D,IAAIoG,EAAkB,GACtB,GAA0B9C,KAAAA,IAAtBqB,EAAQ/C,UAAyB,CACnC,IAAK5B,IAAIgC,KAAO2C,EAAQ/C,UACtBwE,EAAMC,KAAK1B,EAAQ/C,UAAUI,EAAI,EAEnCJ,UAAUkE,UAAYM,EAAMV,KAAK,IAAI,C,MAErC9D,UAAUkE,UAAY,MAEAxC,KAAAA,IAApBqB,EAAQ2B,SACVzE,iBAAiBkB,MAAMK,QAAU,eACjCuB,EAAQ2B,QAAQnC,QAAQ,IACtBnE,IAAIuG,EAAoB3G,SAASyE,cAAc,MAAM,EACrDkC,EAAkBT,UAAYU,EAC9BD,EAAkBrD,iBAAiB,QAAS,KAC1CyC,mBACEpF,cAAcoD,OAAO,GAAO8C,EAAEC,OAASH,EAAkBT,SAAS,EAAE,EAAE,CAE1E,CAAC,EACDhE,uBAAuBgD,YAAYyB,CAAiB,CACtD,CAAC,GAED1E,iBAAiBqC,UAAY,KAEjC,CACA,SAASyC,kBACPrG,YAAY4C,iBAAiB,QAAS,KAIpC3C,eAFEA,cAD8B,IAA5BD,YAAY2B,MAAM2E,KAAI,EACRtE,oBAAoB,gBAAgB,EAEtC/B,eAAcoD,OAAO,GACnCgB,EAAQd,KAAKC,OAAO+C,SAASvG,YAAY2B,MAAM2E,KAAI,CAAE,CAAC,EAExD7C,cAAa,CACf,CAAC,CACH,CAGA,SAAS+C,iBACP3G,YAAY+C,iBAAiB,QAAS,KACJ,UAA5B7C,UAAU0C,MAAMK,SAClB/C,UAAU0C,MAAMK,QAAU,OAC1BhD,SAASsE,IAAM,+BAEfrE,UAAU0C,MAAMK,QAAU,QAC1BhD,SAASsE,IAAM,4BAEjBnE,cAAgB+B,oBAAoB,gBAAgB,CACtD,CAAC,CACH,CACA,SAAS0B,cACPhE,IAAI+G,EAAU,CAAC,GAAG,IAAIC,IAAIzG,cAAc0G,IAAI,GAAOC,EAAE3F,MAAM,EAAE4F,KAAI,CAAE,GACnEJ,EAAQK,QAAQ,KAAK,EACrB5G,YAAY0D,UAAY,GACxB6C,EAAQ5C,QAAQ,IACdnE,IAAIqH,EAASzH,SAASyE,cAAc,QAAQ,EAC5CgD,EAAOpF,MAAQV,EACf8F,EAAOnD,UAAY3C,EACnB8F,EAAOnE,iBAAiB,QAAS,KAC/BoE,eAAeD,EAAOnD,SAAS,CACjC,CAAC,EACD1D,YAAYsE,YAAYuC,CAAM,CAChC,CAAC,CACH,CACA,SAASC,eAAeC,GACH,QAAfA,GACFhH,cAAgB+B,oBAAoB,gBAAgB,EACpDnC,YAAY8B,MAAQ,qBAEpB1B,cAAgBA,cAAcoD,OAC5B,GAAagB,EAAQpD,SAAWgG,CAAU,EAE5CpH,YAAY8B,MAAQsF,GAEtBxD,cAAa,EACb1D,UAAU0C,MAAMK,QAAU,MAC5B,CAIAC,aAAY,EACZF,WAAU,EACVV,kBAAiB,EACjBQ,YAAW,EACX6D,eAAc,EACdH,gBAAe","file":"main.js","sourcesContent":["//#region  Declaration\r\nconst countriesApi = \"https://restcountries.com/v3.1/all\";\r\nconst countriesDiv = document.querySelector(\".countries\") as HTMLDivElement;\r\nconst rootElement = document.documentElement;\r\nlet themeDiv = document.querySelector(\".theme\") as HTMLDivElement;\r\nlet regionsOptions: any;\r\nlet regionInput = document.querySelector(\r\n  \".by-region > input\"\r\n) as HTMLInputElement;\r\nlet arrowImg = document.querySelector(\".by-region >img\") as HTMLImageElement;\r\nlet regionDdl = document.querySelector(\"#regions-list\") as HTMLDListElement;\r\nlet searchInput = document.querySelector(\r\n  \".by-country>input\"\r\n) as HTMLInputElement;\r\ninterface Countries {\r\n  name: {\r\n    common: string;\r\n    official: string;\r\n    nativeName: {\r\n      key: {\r\n        official: string;\r\n        common: string;\r\n      };\r\n    };\r\n  };\r\n  area: number;\r\n  flags: { png: string; svg: string };\r\n  population: number;\r\n  region: string;\r\n  subregion: string;\r\n  capital: string[];\r\n  tld: string[];\r\n  cca3: string;\r\n  currencies: {\r\n    key: {\r\n      name: string;\r\n    };\r\n  };\r\n  languages: {};\r\n  borders: string[];\r\n}\r\nlet countriesList: Countries[];\r\nlet regionsList = document.querySelector(\r\n  \"#regions-list\"\r\n) as HTMLDataListElement;\r\nlet listDiv = document.querySelector(\".list\") as HTMLDivElement;\r\nlet detailesDiv = document.querySelector(\".details\") as HTMLDivElement;\r\nlet backBtn = document.querySelector(\".back-btn>button\");\r\nconst THEMES: any = {\r\n  dark: {\r\n    \"--bg-color\": \"hsl(207, 26%, 17%)\",\r\n    \"--txt-color\": \"hsl(0, 0%, 98%)\",\r\n    \"--elements-bgcolor\": \"hsl(209, 23%, 22%)\",\r\n    \"--filter\": \"invert(100%) grayscale(1)\",\r\n  },\r\n  light: {\r\n    \"--bg-color\": \"hsl(0, 0%, 98%)\",\r\n    \"--txt-color\": \"hsl(200, 15%, 8%)\",\r\n    \"--elements-bgcolor\": \"hsl(0, 0%, 100%)\",\r\n    \"--filter\": \"none\",\r\n  },\r\n};\r\n//#region Details Elements\r\nlet detailesFlag = document.querySelector(\r\n  \".content  .flag > img\"\r\n) as HTMLImageElement;\r\nlet detailsCountryName = document.querySelector(\r\n  \".data .main-data > h3\"\r\n) as HTMLHeadingElement;\r\nlet nativeName = document.querySelector(\r\n  \".main-data  .native-name > span\"\r\n) as HTMLSpanElement;\r\nlet population = document.querySelector(\r\n  \".main-data  .population > span\"\r\n) as HTMLSpanElement;\r\nlet region = document.querySelector(\r\n  \".main-data  .region > span\"\r\n) as HTMLSpanElement;\r\nlet subRegion = document.querySelector(\r\n  \".main-data .sub-region>span\"\r\n) as HTMLSpanElement;\r\nlet capital = document.querySelector(\r\n  \".main-data .capital>span\"\r\n) as HTMLSpanElement;\r\nlet topLevelDomain = document.querySelector(\r\n  \".more-data .tld> span \"\r\n) as HTMLSpanElement;\r\nlet currencies = document.querySelector(\r\n  \".more-data .currencies>span\"\r\n) as HTMLSpanElement;\r\nlet languages = document.querySelector(\r\n  \".more-data .languages>span\"\r\n) as HTMLSpanElement;\r\nlet borderCountryDiv = document.querySelector(\r\n  \".border-country\"\r\n) as HTMLDivElement;\r\nlet borderCountryValuesDiv = document.querySelector(\r\n  \".border-country .values\"\r\n) as HTMLDivElement;\r\n//#endregion\r\n//#endregion\r\n//#region  Functions\r\n//#region  General Functions\r\nfunction addToLocalStorage(key: string, value: any | string) {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n}\r\nfunction getFromLocalStorage(key: string) {\r\n  return localStorage.getItem(key)\r\n    ? JSON.parse(localStorage.getItem(key) || \"\")\r\n    : null;\r\n}\r\nfunction loadPreferedTheme() {\r\n  if (getFromLocalStorage(\"theme\")) {\r\n    themeDiv.setAttribute(\"data-theme\", getFromLocalStorage(\"theme\"));\r\n  } else {\r\n    themeDiv.setAttribute(\"data-theme\", \"light\");\r\n  }\r\n  setPreferedTheme(themeDiv.dataset.theme);\r\n}\r\nfunction setPreferedTheme(themeName: any | string) {\r\n  rootElement.style.setProperty(\"--bg-color\", THEMES[themeName][\"--bg-color\"]);\r\n  rootElement.style.setProperty(\r\n    \"--elements-bgcolor\",\r\n    THEMES[themeName][\"--elements-bgcolor\"]\r\n  );\r\n  rootElement.style.setProperty(\r\n    \"--txt-color\",\r\n    THEMES[themeName][\"--txt-color\"]\r\n  );\r\n  rootElement.style.setProperty(\"--filter\", THEMES[themeName][\"--filter\"]);\r\n}\r\nfunction toggleTheme() {\r\n  themeDiv.addEventListener(\"click\", () => {\r\n    themeDiv.dataset.theme === \"light\"\r\n      ? themeDiv.setAttribute(\"data-theme\", \"dark\")\r\n      : themeDiv.setAttribute(\"data-theme\", \"light\");\r\n    addToLocalStorage(\"theme\", themeDiv.dataset.theme);\r\n    setPreferedTheme(themeDiv.dataset.theme);\r\n  });\r\n}\r\nfunction backToList() {\r\n  backBtn?.addEventListener(\"click\", () => {\r\n    listDiv.style.display = \"block\";\r\n    detailesDiv.style.display = \"none\";\r\n  });\r\n}\r\n//#endregion\r\n//#region Countries Functions\r\nasync function getCountries() {\r\n  if (\r\n    getFromLocalStorage(\"countries-list\") == undefined ||\r\n    getFromLocalStorage(\"countries-list\") == null\r\n  ) {\r\n    let data = (await fetch(countriesApi)).json();\r\n    let list = await data;\r\n    list = list.filter((item: Countries) => item.name.common !== \"Israel\");\r\n    // list.sort((a, b) => a.name.common.localeCompare(b.name.common));\r\n    addToLocalStorage(\"countries-list\", list);\r\n  }\r\n  countriesList = getFromLocalStorage(\"countries-list\");\r\n  loadCountries();\r\n  loadRegions();\r\n  regionsOptions = document.querySelectorAll(\"#regions-list > option\");\r\n}\r\nfunction loadCountries() {\r\n  countriesDiv.innerHTML = \"\";\r\n  countriesList.forEach((country: Countries) => {\r\n    let countryDiv = document.createElement(\"div\");\r\n    countryDiv.className = \"country\";\r\n\r\n    let flagDiv = document.createElement(\"div\");\r\n    flagDiv.className = \"flag\";\r\n    let flagImg = document.createElement(\"img\");\r\n    flagImg.src = country.flags.svg;\r\n    flagDiv.appendChild(flagImg);\r\n    countryDiv.appendChild(flagDiv);\r\n\r\n    let dataDiv = document.createElement(\"div\");\r\n    dataDiv.className = \"data\";\r\n\r\n    let h2 = document.createElement(\"h2\");\r\n    h2.innerHTML = country.name.common;\r\n    dataDiv.appendChild(h2);\r\n\r\n    let populationDiv = document.createElement(\"div\");\r\n    populationDiv.className = \"population\";\r\n    let populationlbl = document.createElement(\"label\");\r\n    populationlbl.innerHTML = \"Population: \";\r\n    let populationSpan = document.createElement(\"span\");\r\n    populationSpan.innerHTML = country.population.toString();\r\n    populationDiv.appendChild(populationlbl);\r\n    populationDiv.appendChild(populationSpan);\r\n    dataDiv.appendChild(populationDiv);\r\n\r\n    let regionDiv = document.createElement(\"div\");\r\n    regionDiv.className = \"region\";\r\n    let regionlbl = document.createElement(\"label\");\r\n    regionlbl.innerHTML = \"Region: \";\r\n    let regionSpan = document.createElement(\"span\");\r\n    regionSpan.innerHTML = country.region;\r\n    regionDiv.appendChild(regionlbl);\r\n    regionDiv.appendChild(regionSpan);\r\n    dataDiv.appendChild(regionDiv);\r\n\r\n    if (country.capital !== undefined) {\r\n      let capitalDiv = document.createElement(\"div\");\r\n      capitalDiv.className = \"capital\";\r\n      let capitalLbl = document.createElement(\"label\");\r\n      capitalLbl.innerHTML = \"Capital: \";\r\n      let capitalSpan = document.createElement(\"span\");\r\n      capitalSpan.innerHTML = country.capital.join(\", \");\r\n      capitalDiv.appendChild(capitalLbl);\r\n      capitalDiv.appendChild(capitalSpan);\r\n      dataDiv.appendChild(capitalDiv);\r\n    }\r\n    countryDiv.appendChild(dataDiv);\r\n    countryDiv.addEventListener(\"click\", () => {\r\n      loadCountryDetails(country);\r\n    });\r\n    countriesDiv.appendChild(countryDiv);\r\n  });\r\n}\r\nfunction loadCountryDetails(country: Countries) {\r\n  listDiv.style.display = \"none\";\r\n  detailesDiv.style.display = \"block\";\r\n  borderCountryValuesDiv.innerHTML = \"\";\r\n  console.log(country);\r\n  detailesFlag.src = country.flags.svg;\r\n  detailsCountryName.innerText = country.name.common;\r\n  nativeName.innerText = country.name.official;\r\n  population.innerText = country.population.toString();\r\n  region.innerText = country.region;\r\n  subRegion.innerText = country.subregion;\r\n  capital.innerText =\r\n    country.capital !== undefined ? country.capital.join(\",\") : \"---\";\r\n  topLevelDomain.innerText = country.tld.join(\", \");\r\n  currencies.innerText =\r\n    country.currencies !== undefined\r\n      ? country.currencies[Object.keys(country.currencies)[0]].name\r\n      : \"---\";\r\n  let langs: string[] = [];\r\n  if (country.languages !== undefined) {\r\n    for (let key in country.languages) {\r\n      langs.push(country.languages[key]);\r\n    }\r\n    languages.innerText = langs.join(\", \");\r\n  } else {\r\n    languages.innerText = \"---\";\r\n  }\r\n  if (country.borders !== undefined) {\r\n    borderCountryDiv.style.display = \"inline-block\";\r\n    country.borders.forEach((border) => {\r\n      let borderCountrySpan = document.createElement(\"span\");\r\n      borderCountrySpan.innerText = border;\r\n      borderCountrySpan.addEventListener(\"click\", () => {\r\n        loadCountryDetails(\r\n          countriesList.filter((c) => c.cca3 === borderCountrySpan.innerText)[0]\r\n        );\r\n      });\r\n      borderCountryValuesDiv.appendChild(borderCountrySpan);\r\n    });\r\n  } else {\r\n    borderCountryDiv.innerHTML = \"---\";\r\n  }\r\n}\r\nfunction searchByCountry() {\r\n  searchInput.addEventListener(\"keyup\", () => {\r\n    if (searchInput.value.trim() == \"\") {\r\n      countriesList = getFromLocalStorage(\"countries-list\");\r\n    }\r\n    countriesList = countriesList.filter((country) =>\r\n      country.name.common.includes(searchInput.value.trim())\r\n    );\r\n    loadCountries();\r\n  });\r\n}\r\n//#endregion\r\n//#region  Regions Functions\r\nfunction openRegionList() {\r\n  regionInput.addEventListener(\"click\", () => {\r\n    if (regionDdl.style.display === \"block\") {\r\n      regionDdl.style.display = \"none\";\r\n      arrowImg.src = \"dist/images/down-arrow.svg\";\r\n    } else {\r\n      regionDdl.style.display = \"block\";\r\n      arrowImg.src = \"dist/images/up-arrow.svg\";\r\n    }\r\n    countriesList = getFromLocalStorage(\"countries-list\");\r\n  });\r\n}\r\nfunction loadRegions() {\r\n  let regions = [...new Set(countriesList.map((r) => r.region).sort())];\r\n  regions.unshift(\"All\");\r\n  regionsList.innerHTML = \"\";\r\n  regions.forEach((region) => {\r\n    let option = document.createElement(\"option\");\r\n    option.value = region;\r\n    option.innerHTML = region;\r\n    option.addEventListener(\"click\", () => {\r\n      filterByRegion(option.innerHTML);\r\n    });\r\n    regionsList.appendChild(option);\r\n  });\r\n}\r\nfunction filterByRegion(regionName: string) {\r\n  if (regionName === \"All\") {\r\n    countriesList = getFromLocalStorage(\"countries-list\");\r\n    regionInput.value = \"Filter by region\";\r\n  } else {\r\n    countriesList = countriesList.filter(\r\n      (country) => country.region === regionName\r\n    );\r\n    regionInput.value = regionName;\r\n  }\r\n  loadCountries();\r\n  regionDdl.style.display = \"none\";\r\n}\r\n//#endregion\r\n//#endregion\r\n//#region  Calls\r\ngetCountries();\r\nbackToList();\r\nloadPreferedTheme();\r\ntoggleTheme();\r\nopenRegionList();\r\nsearchByCountry();\r\n//#endregion\r\n"]}